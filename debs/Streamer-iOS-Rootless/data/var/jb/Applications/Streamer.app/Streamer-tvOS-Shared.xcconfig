#include "../Project-Shared.xcconfig"

//
// Streamer-tvOS-Shared.xcconfig
//
// Generated by BuildSettingExtractor on 16.09.22
// https://buildsettingextractor.com
//

// Always Embed Swift Standard Libraries
// 
// Always embed the Swift standard libraries in the target's products, even if the target
// does not contain any Swift code.  For example, this should be enabled if the target is
// embedding other products which contain Swift, or if it is a test target which does not
// contain Swift but which is testing a product which does.  This setting only applies to
// wrapped products, not to standalone binary products.

ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES



// Primary App Icon Set Name
// 
// Name of an app icon set for the target's default app icon. The contents will be merged
// into the `Info.plist`.

ASSETCATALOG_COMPILER_APPICON_NAME = App Icon & Top Shelf Image



// Global Accent Color Name
// 
// The name of a color resource to use as a the target's accent color, used as the
// default tint color on iOS and watchOS, and accent color on macOS.

ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = 



// Code Signing Identity
// 
// The name, also known as the *common name*, of a valid code-signing certificate in a
// keychain within your keychain path. A missing or invalid certificate will cause a
// build error.

CODE_SIGN_IDENTITY = Apple Development



// Code Signing Style
// 
// This setting specifies the method used to acquire and locate signing assets. Choose
// `Automatic` to let Xcode automatically create and update profiles, app IDs, and
// certificates. Choose `Manual` to create and update these yourself on the developer
// website.

CODE_SIGN_STYLE = Automatic



// Current Project Version
// 
// This setting defines the current version of the project. The value must be a integer
// or floating point number, such as `57` or `365.8`.




// Development Team
// 
// The team ID of a development team to use for signing certificates and provisioning
// profiles.

DEVELOPMENT_TEAM = Z7X5ZATDX2



// Info.plist File
// 
// The project-relative path to the property list file that contains the `Info.plist`
// information used by bundles. For details on information property list files, see
// [Information Property
// List](https://developer.apple.com/documentation/bundleresources/information_property_list).

INFOPLIST_FILE = Streamer-tvOS/Info.plist



// Runpath Search Paths
// 
// This is a list of paths to be added to the `runpath` search path list for the image
// being created. At runtime, `dyld` uses the `runpath` when searching for dylibs whose
// load path begins with `@rpath/`. See [Dynamic Library Programming
// Topics](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/000-Introduction/Introduction.html).

LD_RUNPATH_SEARCH_PATHS = $(inherited) @executable_path/Frameworks



// Library Search Paths
// 
// This is a list of paths to folders to be searched by the linker for libraries used by
// the product. Paths are delimited by whitespace, so any paths with spaces in them need
// to be properly quoted.

LIBRARY_SEARCH_PATHS = $(inherited) $(SDKROOT)/usr/lib/swift



// Product Bundle Identifier
// 
// A string that uniquely identifies the bundle. The string should be in reverse DNS
// format using only alphanumeric characters (`A-Z`, `a-z`, `0-9`), the dot (`.`), and
// the hyphen (`-`). This value is used as the `CFBundleIdentifier` in the `Info.plist`
// of the built bundle.

PRODUCT_BUNDLE_IDENTIFIER = com.mo.streamer.tvos



// Product Name
// 
// This is the basename of the product generated by the target.

PRODUCT_NAME = Streamer



// Provisioning Profile
// 
// Must contain a profile name (or UUID). A missing or invalid profile will cause a build
// error. Use in conjunction with [DEVELOPMENT_TEAM] to fully specify provisioning
// profile.

PROVISIONING_PROFILE_SPECIFIER = 



// Swift Language Version
// 
// Interpret input according to a specific Swift language version number.

SWIFT_VERSION = 5.0



// Targeted Device Families
// 
// The build system uses the selected device to set the correct value for the
// `UIDeviceFamily` key it adds to the target's `Info.plist` file. This also drives the
// --target-device flag to actool, which determines the idioms selected during catalog
// compilation.

TARGETED_DEVICE_FAMILY = 3



// tvOS Deployment Target
// 
// Code will load on this and later versions of tvOS. Framework APIs that are unavailable
// in earlier versions will be weak-linked; your code should check for null function
// pointers or specific system versions before calling newer APIs.

TVOS_DEPLOYMENT_TARGET = 14.0
