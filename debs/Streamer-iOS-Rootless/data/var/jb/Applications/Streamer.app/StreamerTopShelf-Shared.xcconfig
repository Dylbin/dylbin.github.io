#include "../Project-Shared.xcconfig"

//
// StreamerTopShelf-Shared.xcconfig
//
// Generated by BuildSettingExtractor on 16.09.22
// https://buildsettingextractor.com
//

// C++ Language Dialect
// 
// Choose a standard or non-standard C++ language dialect. Options include:
// 
// * C++98: Accept ISO C++ 1998 with amendments, but not GNU extensions. [-std=c++98]
// * GNU++98: Accept ISO C++ 1998 with amendments and GNU extensions. [-std=gnu++98]
// * C++11: Accept the ISO C++ 2011 standard with amendments, but not GNU extensions.
// [-std=c++11]
// * GNU++11: Accept the ISO C++ 2011 standard with amendments and GNU extensions.
// [-std=gnu++11]
// * C++14: Accept the ISO C++ 2014 standard with amendments, but not GNU extensions.
// [-std=c++14]
// * GNU++14: Accept the ISO C++ 2014 standard with amendments and GNU extensions.
// [-std=gnu++14]
// * C++17: Accept the ISO C++ 2017 standard with amendments, but not GNU extensions.
// [-std=c++17]
// * GNU++17: Accept the ISO C++ 2017 standard with amendments and GNU extensions.
// [-std=gnu++17]
// * Compiler Default: Tells the compiler to use its default C++ language dialect. This
// is normally the best choice unless you have specific needs. (Currently equivalent to
// GNU++98.)

CLANG_CXX_LANGUAGE_STANDARD = gnu++17



// Code Signing Identity
// 
// The name, also known as the *common name*, of a valid code-signing certificate in a
// keychain within your keychain path. A missing or invalid certificate will cause a
// build error.

CODE_SIGN_IDENTITY = iPhone Distribution



// Code Signing Style
// 
// This setting specifies the method used to acquire and locate signing assets. Choose
// `Automatic` to let Xcode automatically create and update profiles, app IDs, and
// certificates. Choose `Manual` to create and update these yourself on the developer
// website.

CODE_SIGN_STYLE = Manual



// Current Project Version
// 
// This setting defines the current version of the project. The value must be a integer
// or floating point number, such as `57` or `365.8`.




// Development Team
// 
// The team ID of a development team to use for signing certificates and provisioning
// profiles.

DEVELOPMENT_TEAM = 6J94T567UP



// Generate Info.plist File
// 
// If enabled, automatically generate an Info.plist file with content from build
// settings.

GENERATE_INFOPLIST_FILE = YES



// Info.plist File
// 
// The project-relative path to the property list file that contains the `Info.plist`
// information used by bundles. For details on information property list files, see
// [Information Property
// List](https://developer.apple.com/documentation/bundleresources/information_property_list).

INFOPLIST_FILE = Streamer-TopShelf/Info.plist



// Bundle Display Name
// 
// The user-visible name for the bundle.

INFOPLIST_KEY_CFBundleDisplayName = StreamerTopShelf



// Copyright (Human-Readable)
// 
// A human-readable copyright notice for the bundle.

INFOPLIST_KEY_NSHumanReadableCopyright = 



// Runpath Search Paths
// 
// This is a list of paths to be added to the `runpath` search path list for the image
// being created. At runtime, `dyld` uses the `runpath` when searching for dylibs whose
// load path begins with `@rpath/`. See [Dynamic Library Programming
// Topics](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/000-Introduction/Introduction.html).

LD_RUNPATH_SEARCH_PATHS = $(inherited) @executable_path/Frameworks @executable_path/../../Frameworks



// Product Bundle Identifier
// 
// A string that uniquely identifies the bundle. The string should be in reverse DNS
// format using only alphanumeric characters (`A-Z`, `a-z`, `0-9`), the dot (`.`), and
// the hyphen (`-`). This value is used as the `CFBundleIdentifier` in the `Info.plist`
// of the built bundle.

PRODUCT_BUNDLE_IDENTIFIER = com.mobimeo.TripDetector.TodayExtension1



// Product Name
// 
// This is the basename of the product generated by the target.

PRODUCT_NAME = $(TARGET_NAME)



// Provisioning Profile
// 
// Must contain a profile name (or UUID). A missing or invalid profile will cause a build
// error. Use in conjunction with [DEVELOPMENT_TEAM] to fully specify provisioning
// profile.

PROVISIONING_PROFILE_SPECIFIER = XC com mobimeo TripDetector TodayExtension1



// Skip Install
// 
// If enabled, don't install built products even if deployment locations are active.

SKIP_INSTALL = YES



// Use Compiler to Extract Swift Strings
// 
// When enabled, the Swift compiler will be used to extract Swift string literal and
// interpolation `LocalizedStringKey` and `LocalizationKey` types during localization
// export.

SWIFT_EMIT_LOC_STRINGS = YES



// Swift Language Version
// 
// Interpret input according to a specific Swift language version number.

SWIFT_VERSION = 5.0



// Targeted Device Families
// 
// The build system uses the selected device to set the correct value for the
// `UIDeviceFamily` key it adds to the target's `Info.plist` file. This also drives the
// --target-device flag to actool, which determines the idioms selected during catalog
// compilation.

TARGETED_DEVICE_FAMILY = 3



// tvOS Deployment Target
// 
// Code will load on this and later versions of tvOS. Framework APIs that are unavailable
// in earlier versions will be weak-linked; your code should check for null function
// pointers or specific system versions before calling newer APIs.

TVOS_DEPLOYMENT_TARGET = 14.0
